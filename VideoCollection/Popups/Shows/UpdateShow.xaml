<Window x:Name="updateShowWindow" x:Class="VideoCollection.Popups.Shows.UpdateShow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VideoCollection.Popups"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        WindowStyle="None" Height="500" Width="800" WindowStartupLocation="CenterOwner" Background="{StaticResource BackgroundBrush}" ShowInTaskbar="False" ResizeMode="NoResize">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="DeleteIconButtonStyle" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="#536DFE" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                        Value="True">
                        <Setter Property="Foreground" Value="Red" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="MainGrid" SizeChanged="MainGrid_SizeChanged">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="500"/>
        </Grid.ColumnDefinitions>

        <Grid.LayoutTransform>
            <ScaleTransform x:Name="ApplicationScaleTransform"
                        CenterX="0"
                        CenterY="0"
                        ScaleX="{Binding ElementName=updateShowWindow, Path=ScaleValue}"
                        ScaleY="{Binding ElementName=updateShowWindow, Path=ScaleValue}" />
        </Grid.LayoutTransform>

        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Label Foreground="White" VerticalAlignment="Center">Shows:</Label>
                <TextBox Width="245" FontSize="12" Foreground="White" VerticalAlignment="Center" Name="txtFilter" IsReadOnly="true" Focusable="False" IsHitTestVisible="False" TextChanged="txtFilter_TextChanged" />
            </StackPanel>
            <ListView Grid.Row="1" x:Name="lvShowList" SelectionChanged="lvShowList_SelectionChanged" Tag="{Binding Text, ElementName=hiddenText}" SelectionMode="Single" Margin="0,0,0,3" ScrollViewer.CanContentScroll="False">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="270">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="57"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            
                            <Image Grid.Column="0" Width="57" Height="32" Source="{Binding Thumbnail}"/>
                            <TextBlock Grid.Column="1" Text="{Binding Title}" VerticalAlignment="Center" Margin="10,0,10,0" TextWrapping="WrapWithOverflow"/>
                            <Button x:Name="btnDeleteShow" Grid.Column="2" Style="{StaticResource DeleteIconButtonStyle}" Click="btnDeleteShow_Click" Tag="{Binding Id}" Width="32" Height="32" Margin="0,0,-10,0">
                                <materialDesign:PackIcon Kind="CloseCircleOutline" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" Width="32" Height="32"/>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

        <StackPanel x:Name="panelShowInfo" Grid.Row="0" Grid.Column="1" Visibility="Collapsed">
            <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                <Label Foreground="White">Show Folder</Label>
                <TextBox x:Name="txtShowFolder" Width="270" FontSize="12" IsReadOnly="True" Foreground="White" Focusable="False" IsHitTestVisible="False"/>
                <Button x:Name="btnChooseShowFolder" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="10,0,0,0" Click="btnChooseShowFolder_Click">Choose Folder</Button>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                <Label Foreground="White" Margin="0,0,11,0">Show Title</Label>
                <TextBox x:Name="txtShowName" Width="270" FontSize="12" Foreground="White"></TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                <Label Foreground="White">Thumbnail</Label>
                <Button x:Name="btnChooseImage" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="10,0,10,0" Click="btnChooseImage_Click" VerticalAlignment="Top">Choose Image</Button>
                <Image x:Name="imgThumbnail" Height="153" Width="272"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                <Label Foreground="White" Margin="0,0,4,0">Thumbnail Tile</Label>
                <RadioButton x:Name="btnImage" GroupName="ThumbTile" Click="ThumbnailTileButtonClick" Foreground="White" Margin="4,0,16,0">Image</RadioButton>
                <RadioButton x:Name="btnText" GroupName="ThumbTile" Click="ThumbnailTileButtonClick" Foreground="White" Margin="4,0,16,0">Text</RadioButton>
            </StackPanel>

            <Label Foreground="White">Rating:</Label>
            <StackPanel Orientation="Horizontal">
                <RadioButton x:Name="btnTVY" GroupName="Rating" Click="RatingButtonClick" Foreground="White" Margin="4,0,16,0">TV Y</RadioButton>
                <RadioButton x:Name="btnTVY7" GroupName="Rating" Click="RatingButtonClick" Foreground="White" Margin="4,0,16,0">TV Y7</RadioButton>
                <RadioButton x:Name="btnTVG" GroupName="Rating" Click="RatingButtonClick" Foreground="White" Margin="4,0,16,0">TV G</RadioButton>
                <RadioButton x:Name="btnTVPG" GroupName="Rating" Click="RatingButtonClick" Foreground="White" Margin="4,0,16,0">TV PG</RadioButton>
                <RadioButton x:Name="btnTV14" GroupName="Rating" Click="RatingButtonClick" Foreground="White" Margin="4,0,16,0">TV 14</RadioButton>
                <RadioButton x:Name="btnTVMA" GroupName="Rating" Click="RatingButtonClick" Foreground="White" Margin="4,0,16,0">TV MA</RadioButton>
            </StackPanel>

            <Label Foreground="White">Categories:</Label>
            <ScrollViewer VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" Height="115">
                <ItemsControl x:Name="icCategories">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked}" IsEnabled="{Binding IsEnabled}" Style="{StaticResource MaterialDesignDarkCheckBox}" Checked="CheckBoxChecked" Unchecked="CheckBoxUnchecked" Foreground="White" Margin="5,0,15,0" VerticalAlignment="Top"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </StackPanel>

        <ContentControl x:Name="loadingControl" Grid.Row="0" Grid.Column="1" Visibility="Collapsed"/>
        
        <StackPanel x:Name="buttons" Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button x:Name="btnCancel" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,0,10,0" Click="btnCancel_Click">Cancel</Button>
            <Button x:Name="btnOK" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="10,0,10,0" Click="btnOK_Click">OK</Button>
            <Button x:Name="btnApply" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="10,0,0,0" Click="btnApply_Click">Apply</Button>
        </StackPanel>

        <Border x:Name="Splash" Grid.ColumnSpan="2" Grid.RowSpan="2" Style="{StaticResource SplashStyle}"/>
    </Grid>
</Window>
